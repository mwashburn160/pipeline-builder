services:
  nginx:
    image: 'nginx:latest'
    container_name: nginx
    depends_on:
      - add-plugin
    ports:
      - '8080:80'
    restart: always
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf:ro'
      - './api.conf:/etc/nginx/conf.d/api.conf:ro'
  database:
    image: 'postgres:latest'
    container_name: postgres
    env_file:
      - ./pipeline.config
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - '5432:5432'
    restart: always
    command: postgres -c listen_addresses='*'
    volumes:
      - './db-data/:/var/lib/postgresql/data/'
      - './init.sql:/docker-entrypoint-initdb.d/init.sql'
  pgadmin:
    image: 'dpage/pgadmin4:latest'
    container_name: pgadmin
    env_file:
      - ./pipeline.config
    depends_on:
      database:
        condition: service_healthy
    ports:
      - '5433:80'
    volumes:
      - './pgadmin-data/:/var/lib/pgadmin/'
  add-plugin:
    image: add-plugin
    build:
      context: ../../api/backend/add-plugin
    env_file:
      - ./pipeline.config
    privileged: true
    depends_on:
      database:
        condition: service_healthy
    ports:
      - '3000:3000'